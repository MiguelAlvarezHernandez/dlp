	' Global variables:
	' * StructType{recordFields=[RecordField{fieldType=IntType, name='integer'}, RecordField{fieldType=CharType, name='character'}]} pair (offset 0)
	' * ArrayType{size=2, elementType=StructType{recordFields=[RecordField{fieldType=ArrayType{size=2, elementType=StructType{recordFields=[RecordField{fieldType=IntType, name='age'}]}}, name='employees'}]}} acme (offset 3)
	' * ArrayType{size=8, elementType=ArrayType{size=3, elementType=IntType}} fibonacci (offset 11)
	' Invocation to the main function
	call	main
	halt
p:
	' * Parameters:
	' * Local variables:
	enter	0
	ret	0, 0, 0
f:
	' * Parameters:
	' * DoubleType r (offset 6)
	' * IntType e (offset 4)
	' * Local variables:
	' * DoubleType real (offset -4)
	' * CharType c (offset -5)
	' * IntType result (offset -7)
	enter	7
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	6
	addi
	loadf
	pushf	10.0
	mulf
	storef
	push	bp
	pushi	-5
	addi
	pushb	48
	storeb
	push	bp
	pushi	4
	addi
	loadi
	pushi	256
	lti
	jz label0
	' * Body of the if branch
	push	bp
	pushi	-5
	addi
	push	bp
	pushi	4
	addi
	loadi
	i2b
	storeb
	push	bp
	pushi	-7
	addi
	push	bp
	pushi	-5
	addi
	loadb
	b2i
	storei
	jmp label1
label0:
	' * Body of the else branch
	push	bp
	pushi	-7
	addi
	push	bp
	pushi	-4
	addi
	loadf
	f2i
	storei
label1:
	push	bp
	pushi	-7
	addi
	loadi
	ret	2, 7, 6
initialize:
	' * Parameters:
	' * Local variables:
	' * IntType i (offset -2)
	enter	2
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	pushi	0
	storei
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	1
	storei
	pusha	11
	pushi	0
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	pushi	1
	storei
	push	bp
	pushi	-2
	addi
	pushi	1
	storei
label2:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	8
	lti
	jz label3
	' * Body of the while statement
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	subi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	storei
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	subi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	loadi
	storei
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	loadi
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	addi
	storei
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp label2
label3:
	ret	0, 2, 0
main:
	' * Parameters:
	' * Local variables:
	' * IntType i (offset -2)
	' * IntType j (offset -4)
	enter	4
	call	p
	push	bp
	pushi	-2
	addi
	pushi	0
	storei
	pusha	0
	pushi	2
	addi
	pushb	48
	storeb
	pusha	0
	pushi	0
	addi
	pushb	48
	b2i
	storei
	push	bp
	pushi	-2
	addi
	loadi
	i2f
	pusha	0
	pushi	2
	addi
	loadb
	b2i
	call	f
	outi
	pushb	10
	outb
	pushf	1.3
	pushi	2
	call	f
	popi
	call	initialize
	push	bp
	pushi	-2
	addi
	pushi	0
	storei
label4:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	8
	lti
	jz label5
	' * Body of the while statement
	pushb	40
	outb
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	outi
	pushb	41
	outb
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	0
	pushi	2
	muli
	addi
	loadi
	outi
	pushb	43
	outb
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	1
	pushi	2
	muli
	addi
	loadi
	outi
	pushb	61
	outb
	pusha	11
	push	bp
	pushi	-2
	addi
	loadi
	pushi	6
	muli
	addi
	pushi	2
	pushi	2
	muli
	addi
	loadi
	outi
	pushb	10
	outb
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp label4
label5:
	pusha	3
	pushi	1
	pushi	4
	muli
	addi
	pushi	0
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	0
	addi
	pushi	56
	storei
	pusha	3
	pushi	1
	pushi	4
	muli
	addi
	pushi	0
	addi
	pushi	1
	pushi	2
	muli
	addi
	pushi	0
	addi
	loadi
	outi
	pushb	10
	outb
	push	bp
	pushi	-2
	addi
	pushi	0
	storei
label6:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	2
	lti
	jz label7
	' * Body of the while statement
	push	bp
	pushi	-4
	addi
	pushi	0
	storei
label8:
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	lti
	jz label9
	' * Body of the while statement
	pusha	3
	push	bp
	pushi	-2
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-2
	addi
	loadi
	push	bp
	pushi	-4
	addi
	loadi
	addi
	storei
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	1
	addi
	storei
	jmp label8
label9:
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp label6
label7:
	push	bp
	pushi	-2
	addi
	pushi	0
	storei
label10:
	push	bp
	pushi	-2
	addi
	loadi
	pushi	2
	lti
	jz label11
	' * Body of the while statement
	push	bp
	pushi	-4
	addi
	pushi	0
	storei
label12:
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	lti
	jz label13
	' * Body of the while statement
	pusha	3
	push	bp
	pushi	-2
	addi
	loadi
	pushi	4
	muli
	addi
	pushi	0
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	2
	muli
	addi
	pushi	0
	addi
	loadi
	outi
	pushb	32
	outb
	push	bp
	pushi	-4
	addi
	push	bp
	pushi	-4
	addi
	loadi
	pushi	1
	addi
	storei
	jmp label12
label13:
	push	bp
	pushi	-2
	addi
	push	bp
	pushi	-2
	addi
	loadi
	pushi	1
	addi
	storei
	jmp label10
label11:
	ret	0, 4, 0
