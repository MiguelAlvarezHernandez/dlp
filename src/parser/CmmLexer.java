// Generated from C:/Users/ovied/IdeaProjects/dlp/src/parser/Cmm.g4 by ANTLR 4.13.2
package parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CmmLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		INT_CONSTANT=1, ID=2, CHAR_CONSTANT=3, ONE_LINE_COMMENT=4, REAL_CONSTANT=5, 
		ML_COMMENT=6, WS=7;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"INT_CONSTANT", "ID", "CHAR_CONSTANT", "ONE_LINE_COMMENT", "REAL_CONSTANT", 
			"ML_COMMENT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "INT_CONSTANT", "ID", "CHAR_CONSTANT", "ONE_LINE_COMMENT", "REAL_CONSTANT", 
			"ML_COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CmmLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Cmm.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0007\u00a2\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0001"+
		"\u0000\u0001\u0000\u0005\u0000\u0012\b\u0000\n\u0000\f\u0000\u0015\t\u0000"+
		"\u0001\u0000\u0003\u0000\u0018\b\u0000\u0001\u0001\u0003\u0001\u001b\b"+
		"\u0001\u0001\u0001\u0005\u0001\u001e\b\u0001\n\u0001\f\u0001!\t\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0003\u0002/\b\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0005\u00035\b\u0003\n\u0003\f\u00038\t\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0004\u0004=\b\u0004\u000b\u0004\f\u0004>\u0001\u0004\u0001"+
		"\u0004\u0005\u0004C\b\u0004\n\u0004\f\u0004F\t\u0004\u0001\u0004\u0005"+
		"\u0004I\b\u0004\n\u0004\f\u0004L\t\u0004\u0001\u0004\u0001\u0004\u0004"+
		"\u0004P\b\u0004\u000b\u0004\f\u0004Q\u0001\u0004\u0004\u0004U\b\u0004"+
		"\u000b\u0004\f\u0004V\u0001\u0004\u0001\u0004\u0003\u0004[\b\u0004\u0001"+
		"\u0004\u0004\u0004^\b\u0004\u000b\u0004\f\u0004_\u0001\u0004\u0004\u0004"+
		"c\b\u0004\u000b\u0004\f\u0004d\u0001\u0004\u0001\u0004\u0005\u0004i\b"+
		"\u0004\n\u0004\f\u0004l\t\u0004\u0001\u0004\u0001\u0004\u0003\u0004p\b"+
		"\u0004\u0001\u0004\u0004\u0004s\b\u0004\u000b\u0004\f\u0004t\u0001\u0004"+
		"\u0005\u0004x\b\u0004\n\u0004\f\u0004{\t\u0004\u0001\u0004\u0001\u0004"+
		"\u0004\u0004\u007f\b\u0004\u000b\u0004\f\u0004\u0080\u0001\u0004\u0001"+
		"\u0004\u0003\u0004\u0085\b\u0004\u0001\u0004\u0004\u0004\u0088\b\u0004"+
		"\u000b\u0004\f\u0004\u0089\u0003\u0004\u008c\b\u0004\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0005\u0005\u0092\b\u0005\n\u0005\f\u0005"+
		"\u0095\t\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0004\u0006\u009d\b\u0006\u000b\u0006\f\u0006\u009e\u0001"+
		"\u0006\u0001\u0006\u0001\u0093\u0000\u0007\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u0001\u0000\t\u0001\u0000"+
		"19\u0001\u000009\u0003\u0000AZ__az\u0004\u000009AZ__az\u0002\u0000nnt"+
		"t\u0001\u0000\n\n\u0002\u0000EEee\u0002\u0000++--\u0003\u0000\t\n\r\r"+
		"  \u00bc\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000"+
		"\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000"+
		"\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000"+
		"\u0000\r\u0001\u0000\u0000\u0000\u0001\u0017\u0001\u0000\u0000\u0000\u0003"+
		"\u001a\u0001\u0000\u0000\u0000\u0005.\u0001\u0000\u0000\u0000\u00070\u0001"+
		"\u0000\u0000\u0000\t\u008b\u0001\u0000\u0000\u0000\u000b\u008d\u0001\u0000"+
		"\u0000\u0000\r\u009c\u0001\u0000\u0000\u0000\u000f\u0013\u0007\u0000\u0000"+
		"\u0000\u0010\u0012\u0007\u0001\u0000\u0000\u0011\u0010\u0001\u0000\u0000"+
		"\u0000\u0012\u0015\u0001\u0000\u0000\u0000\u0013\u0011\u0001\u0000\u0000"+
		"\u0000\u0013\u0014\u0001\u0000\u0000\u0000\u0014\u0018\u0001\u0000\u0000"+
		"\u0000\u0015\u0013\u0001\u0000\u0000\u0000\u0016\u0018\u00050\u0000\u0000"+
		"\u0017\u000f\u0001\u0000\u0000\u0000\u0017\u0016\u0001\u0000\u0000\u0000"+
		"\u0018\u0002\u0001\u0000\u0000\u0000\u0019\u001b\u0007\u0002\u0000\u0000"+
		"\u001a\u0019\u0001\u0000\u0000\u0000\u001b\u001f\u0001\u0000\u0000\u0000"+
		"\u001c\u001e\u0007\u0003\u0000\u0000\u001d\u001c\u0001\u0000\u0000\u0000"+
		"\u001e!\u0001\u0000\u0000\u0000\u001f\u001d\u0001\u0000\u0000\u0000\u001f"+
		" \u0001\u0000\u0000\u0000 \u0004\u0001\u0000\u0000\u0000!\u001f\u0001"+
		"\u0000\u0000\u0000\"#\u0005\'\u0000\u0000#$\t\u0000\u0000\u0000$/\u0005"+
		"\'\u0000\u0000%&\u0005\'\u0000\u0000&\'\u0005\\\u0000\u0000\'(\u0003\u0001"+
		"\u0000\u0000()\u0005\'\u0000\u0000)/\u0001\u0000\u0000\u0000*+\u0005\'"+
		"\u0000\u0000+,\u0005\\\u0000\u0000,-\u0007\u0004\u0000\u0000-/\u0005\'"+
		"\u0000\u0000.\"\u0001\u0000\u0000\u0000.%\u0001\u0000\u0000\u0000.*\u0001"+
		"\u0000\u0000\u0000/\u0006\u0001\u0000\u0000\u000001\u0005/\u0000\u0000"+
		"12\u0005/\u0000\u000026\u0001\u0000\u0000\u000035\b\u0005\u0000\u0000"+
		"43\u0001\u0000\u0000\u000058\u0001\u0000\u0000\u000064\u0001\u0000\u0000"+
		"\u000067\u0001\u0000\u0000\u000079\u0001\u0000\u0000\u000086\u0001\u0000"+
		"\u0000\u00009:\u0006\u0003\u0000\u0000:\b\u0001\u0000\u0000\u0000;=\u0003"+
		"\u0001\u0000\u0000<;\u0001\u0000\u0000\u0000=>\u0001\u0000\u0000\u0000"+
		"><\u0001\u0000\u0000\u0000>?\u0001\u0000\u0000\u0000?@\u0001\u0000\u0000"+
		"\u0000@D\u0005.\u0000\u0000AC\u0003\u0001\u0000\u0000BA\u0001\u0000\u0000"+
		"\u0000CF\u0001\u0000\u0000\u0000DB\u0001\u0000\u0000\u0000DE\u0001\u0000"+
		"\u0000\u0000E\u008c\u0001\u0000\u0000\u0000FD\u0001\u0000\u0000\u0000"+
		"GI\u0003\u0001\u0000\u0000HG\u0001\u0000\u0000\u0000IL\u0001\u0000\u0000"+
		"\u0000JH\u0001\u0000\u0000\u0000JK\u0001\u0000\u0000\u0000KM\u0001\u0000"+
		"\u0000\u0000LJ\u0001\u0000\u0000\u0000MO\u0005.\u0000\u0000NP\u0003\u0001"+
		"\u0000\u0000ON\u0001\u0000\u0000\u0000PQ\u0001\u0000\u0000\u0000QO\u0001"+
		"\u0000\u0000\u0000QR\u0001\u0000\u0000\u0000R\u008c\u0001\u0000\u0000"+
		"\u0000SU\u0003\u0001\u0000\u0000TS\u0001\u0000\u0000\u0000UV\u0001\u0000"+
		"\u0000\u0000VT\u0001\u0000\u0000\u0000VW\u0001\u0000\u0000\u0000WX\u0001"+
		"\u0000\u0000\u0000XZ\u0007\u0006\u0000\u0000Y[\u0007\u0007\u0000\u0000"+
		"ZY\u0001\u0000\u0000\u0000Z[\u0001\u0000\u0000\u0000[]\u0001\u0000\u0000"+
		"\u0000\\^\u0003\u0001\u0000\u0000]\\\u0001\u0000\u0000\u0000^_\u0001\u0000"+
		"\u0000\u0000_]\u0001\u0000\u0000\u0000_`\u0001\u0000\u0000\u0000`\u008c"+
		"\u0001\u0000\u0000\u0000ac\u0003\u0001\u0000\u0000ba\u0001\u0000\u0000"+
		"\u0000cd\u0001\u0000\u0000\u0000db\u0001\u0000\u0000\u0000de\u0001\u0000"+
		"\u0000\u0000ef\u0001\u0000\u0000\u0000fj\u0005.\u0000\u0000gi\u0003\u0001"+
		"\u0000\u0000hg\u0001\u0000\u0000\u0000il\u0001\u0000\u0000\u0000jh\u0001"+
		"\u0000\u0000\u0000jk\u0001\u0000\u0000\u0000km\u0001\u0000\u0000\u0000"+
		"lj\u0001\u0000\u0000\u0000mo\u0007\u0006\u0000\u0000np\u0007\u0007\u0000"+
		"\u0000on\u0001\u0000\u0000\u0000op\u0001\u0000\u0000\u0000pr\u0001\u0000"+
		"\u0000\u0000qs\u0003\u0001\u0000\u0000rq\u0001\u0000\u0000\u0000st\u0001"+
		"\u0000\u0000\u0000tr\u0001\u0000\u0000\u0000tu\u0001\u0000\u0000\u0000"+
		"u\u008c\u0001\u0000\u0000\u0000vx\u0003\u0001\u0000\u0000wv\u0001\u0000"+
		"\u0000\u0000x{\u0001\u0000\u0000\u0000yw\u0001\u0000\u0000\u0000yz\u0001"+
		"\u0000\u0000\u0000z|\u0001\u0000\u0000\u0000{y\u0001\u0000\u0000\u0000"+
		"|~\u0005.\u0000\u0000}\u007f\u0003\u0001\u0000\u0000~}\u0001\u0000\u0000"+
		"\u0000\u007f\u0080\u0001\u0000\u0000\u0000\u0080~\u0001\u0000\u0000\u0000"+
		"\u0080\u0081\u0001\u0000\u0000\u0000\u0081\u0082\u0001\u0000\u0000\u0000"+
		"\u0082\u0084\u0007\u0006\u0000\u0000\u0083\u0085\u0007\u0007\u0000\u0000"+
		"\u0084\u0083\u0001\u0000\u0000\u0000\u0084\u0085\u0001\u0000\u0000\u0000"+
		"\u0085\u0087\u0001\u0000\u0000\u0000\u0086\u0088\u0003\u0001\u0000\u0000"+
		"\u0087\u0086\u0001\u0000\u0000\u0000\u0088\u0089\u0001\u0000\u0000\u0000"+
		"\u0089\u0087\u0001\u0000\u0000\u0000\u0089\u008a\u0001\u0000\u0000\u0000"+
		"\u008a\u008c\u0001\u0000\u0000\u0000\u008b<\u0001\u0000\u0000\u0000\u008b"+
		"J\u0001\u0000\u0000\u0000\u008bT\u0001\u0000\u0000\u0000\u008bb\u0001"+
		"\u0000\u0000\u0000\u008by\u0001\u0000\u0000\u0000\u008c\n\u0001\u0000"+
		"\u0000\u0000\u008d\u008e\u0005/\u0000\u0000\u008e\u008f\u0005*\u0000\u0000"+
		"\u008f\u0093\u0001\u0000\u0000\u0000\u0090\u0092\t\u0000\u0000\u0000\u0091"+
		"\u0090\u0001\u0000\u0000\u0000\u0092\u0095\u0001\u0000\u0000\u0000\u0093"+
		"\u0094\u0001\u0000\u0000\u0000\u0093\u0091\u0001\u0000\u0000\u0000\u0094"+
		"\u0096\u0001\u0000\u0000\u0000\u0095\u0093\u0001\u0000\u0000\u0000\u0096"+
		"\u0097\u0005*\u0000\u0000\u0097\u0098\u0005/\u0000\u0000\u0098\u0099\u0001"+
		"\u0000\u0000\u0000\u0099\u009a\u0006\u0005\u0000\u0000\u009a\f\u0001\u0000"+
		"\u0000\u0000\u009b\u009d\u0007\b\u0000\u0000\u009c\u009b\u0001\u0000\u0000"+
		"\u0000\u009d\u009e\u0001\u0000\u0000\u0000\u009e\u009c\u0001\u0000\u0000"+
		"\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009f\u00a0\u0001\u0000\u0000"+
		"\u0000\u00a0\u00a1\u0006\u0006\u0000\u0000\u00a1\u000e\u0001\u0000\u0000"+
		"\u0000\u001a\u0000\u0013\u0017\u001a\u001d\u001f.6>DJQVZ_djoty\u0080\u0084"+
		"\u0089\u008b\u0093\u009e\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}